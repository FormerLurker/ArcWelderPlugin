#include "py_arc_welder_version.h"
PyObject* py_arc_welder_version::build_py_arc_welder_version()
{
	PyObject* p_results = Py_BuildValue(
		"{s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:s,s:i}",
		"program_name",
		program_name.c_str(),
		"description",
		description.c_str(),
		"sub_title",
		sub_title.c_str(),
		"author",
		author.c_str(),
		"copyright_date",
		copyright_date.c_str(),
		"build_date",
		build_date.c_str(),
		"git_branch",
		git_branch.c_str(),
		"git_commit_hash",
		git_commit_hash.c_str(),
		"git_commit_hash_short",
		git_commit_hash_short.c_str(),
		"git_commit_date",
		git_commit_date.c_str(),
		"git_tag",
		git_tag.c_str(),
		"git_tagged_version",
		git_tagged_version.c_str(),
		"git_author",
		git_author.c_str(),
		"git_repository_name",
		git_repository_name.c_str(),
		"git_remote_url",
		git_remote_url.c_str(),
		"git_author_url",
		git_author_url.c_str(),
		"git_repository_url",
		git_repository_url.c_str(),
		"title",
		get_title().c_str(),
		"version_info_string",
		get_version_info_string().c_str(),
		"version_string",
		get_version_string().c_str(),
		"version_string_full",
		get_version_string_full().c_str(),
		"version_string_compact",
		get_version_string_compact().c_str(),
		"commit_url",
		get_commit_url().c_str(),
		"release_url",
		get_release_url().c_str(),
		"copyright",
		get_copyright().c_str(),
		"is_release",
		(long int)(is_release() ? 1 : 0)
	);
	return p_results;

}